//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift
import UIKit

/// This `R` struct is generated and contains references to static resources.
struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
  fileprivate static let hostingBundle = Bundle(for: R.Class.self)
  
  static func validate() throws {
    try intern.validate()
  }
  
  /// This `R.color` struct is generated, and contains static references to 0 color palettes.
  struct color {
    fileprivate init() {}
  }
  
  /// This `R.file` struct is generated, and contains static references to 0 files.
  struct file {
    fileprivate init() {}
  }
  
  /// This `R.font` struct is generated, and contains static references to 0 fonts.
  struct font {
    fileprivate init() {}
  }
  
  /// This `R.image` struct is generated, and contains static references to 0 images.
  struct image {
    fileprivate init() {}
  }
  
  /// This `R.nib` struct is generated, and contains static references to 0 nibs.
  struct nib {
    fileprivate init() {}
  }
  
  /// This `R.reuseIdentifier` struct is generated, and contains static references to 0 reuse identifiers.
  struct reuseIdentifier {
    fileprivate init() {}
  }
  
  /// This `R.segue` struct is generated, and contains static references to 0 view controllers.
  struct segue {
    fileprivate init() {}
  }
  
  /// This `R.storyboard` struct is generated, and contains static references to 3 storyboards.
  struct storyboard {
    /// Storyboard `LaunchScreen`.
    static let launchScreen = _R.storyboard.launchScreen()
    /// Storyboard `MergeTextViewController`.
    static let mergeTextViewController = _R.storyboard.mergeTextViewController()
    /// Storyboard `TextFieldViewController`.
    static let textFieldViewController = _R.storyboard.textFieldViewController()
    
    /// `UIStoryboard(name: "LaunchScreen", bundle: ...)`
    static func launchScreen(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.launchScreen)
    }
    
    /// `UIStoryboard(name: "MergeTextViewController", bundle: ...)`
    static func mergeTextViewController(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.mergeTextViewController)
    }
    
    /// `UIStoryboard(name: "TextFieldViewController", bundle: ...)`
    static func textFieldViewController(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.textFieldViewController)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.string` struct is generated, and contains static references to 0 localization tables.
  struct string {
    fileprivate init() {}
  }
  
  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      try _R.validate()
    }
    
    fileprivate init() {}
  }
  
  fileprivate class Class {}
  
  fileprivate init() {}
}

struct _R: Rswift.Validatable {
  static func validate() throws {
    try storyboard.validate()
  }
  
  struct nib {
    fileprivate init() {}
  }
  
  struct storyboard: Rswift.Validatable {
    static func validate() throws {
      try mergeTextViewController.validate()
      try textFieldViewController.validate()
    }
    
    struct launchScreen: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = UIKit.UIViewController
      
      let bundle = R.hostingBundle
      let name = "LaunchScreen"
      
      fileprivate init() {}
    }
    
    struct mergeTextViewController: Rswift.StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = MergeTextViewController
      
      let bundle = R.hostingBundle
      let mergeTextViewController = StoryboardViewControllerResource<MergeTextViewController>(identifier: "MergeTextViewController")
      let name = "MergeTextViewController"
      
      func mergeTextViewController(_: Void = ()) -> MergeTextViewController? {
        return UIKit.UIStoryboard(resource: self).instantiateViewController(withResource: mergeTextViewController)
      }
      
      static func validate() throws {
        if _R.storyboard.mergeTextViewController().mergeTextViewController() == nil { throw Rswift.ValidationError(description:"[R.swift] ViewController with identifier 'mergeTextViewController' could not be loaded from storyboard 'MergeTextViewController' as 'MergeTextViewController'.") }
      }
      
      fileprivate init() {}
    }
    
    struct textFieldViewController: Rswift.StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = TextFieldViewController
      
      let bundle = R.hostingBundle
      let name = "TextFieldViewController"
      let textFieldViewController = StoryboardViewControllerResource<TextFieldViewController>(identifier: "TextFieldViewController")
      
      func textFieldViewController(_: Void = ()) -> TextFieldViewController? {
        return UIKit.UIStoryboard(resource: self).instantiateViewController(withResource: textFieldViewController)
      }
      
      static func validate() throws {
        if _R.storyboard.textFieldViewController().textFieldViewController() == nil { throw Rswift.ValidationError(description:"[R.swift] ViewController with identifier 'textFieldViewController' could not be loaded from storyboard 'TextFieldViewController' as 'TextFieldViewController'.") }
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate init() {}
}
